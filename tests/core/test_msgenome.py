# -*- coding: utf-8 -*-
from modelseedpy.core.msgenome import MSFeature, MSGenome, parse_fasta_str


def test_parse_fasta_str1():
    faa_str = """
>NP_414543.1 fused aspartate kinase/homoserine dehydrogenase 1
MRVLKFGGTSVANAERFLRVADILESNARQGQVATVLSAPAKITNHLVAMIEKTISGQDALPNISDAERIFAELLTGLAA
AQPGFPLAQLKTFVDQEFAQIKHVLHGISLLGQCPDSINAALICRGEKMSIAIMAGVLEARGHNVTVIDPVEKLLAVGHY
LESTVDIAESTRRIAASRIPADHMVLMAGFTAGNEKGELVVLGRNGSDYSAAVLAACLRADCCEIWTDVDGVYTCDPRQV
PDARLLKSMSYQEAMELSYFGAKVLHPRTITPIAQFQIPCLIKNTGNPQAPGTLIGASRDEDELPVKGISNLNNMAMFSV
SGPGMKGMVGMAARVFAAMSRARISVVLITQSSSEYSISFCVPQSDCVRAERAMQEEFYLELKEGLLEPLAVTERLAIIS
VVGDGMRTLRGISAKFFAALARANINIVAIAQGSSERSISVVVNNDDATTGVRVTHQMLFNTDQVIEVFVIGVGGVGGAL
LEQLKRQQSWLKNKHIDLRVCGVANSKALLTNVHGLNLENWQEELAQAKEPFNLGRLIRLVKEYHLLNPVIVDCTSSQAV
ADQYADFLREGFHVVTPNKKANTSSMDYYHQLRYAAEKSRRKFLYDTNVGAGLPVIENLQNLLNAGDELMKFSGILSGSL
SYIFGKLDEGMSFSEATTLAREMGYTEPDPRDDLSGMDVARKLLILARETGRELELADIEIEPVLPAEFNAEGDVAAFMA
NLSQLDDLFAARVAKARDEGKVLRYVGNIDEDGVCRVKIAEVDGNDPLFKVKNGENALAFYSHYYQPLPLVLRGYGAGND
VTAAGVFADLLRTLSWKLGV
    """
    features = parse_fasta_str(faa_str, " ")
    assert len(features) == 1
    assert features[0].id == "NP_414543.1"
    assert (
        features[0].description == "fused aspartate kinase/homoserine dehydrogenase 1"
    )
    assert len(features[0].seq) == 820


def test_parse_fasta_str2():
    faa_str = """
>NP_414543.1 fused aspartate kinase/homoserine dehydrogenase 1
MRVLKFGGTSVANAERFLRVADILESNARQGQVATVLSAPAKITNHLVAMIEKTISGQDALPNISDAERIFAELLTGLAA
AQPGFPLAQLKTFVDQEFAQIKHVLHGISLLGQCPDSINAALICRGEKMSIAIMAGVLEARGHNVTVIDPVEKLLAVGHY
LESTVDIAESTRRIAASRIPADHMVLMAGFTAGNEKGELVVLGRNGSDYSAAVLAACLRADCCEIWTDVDGVYTCDPRQV
PDARLLKSMSYQEAMELSYFGAKVLHPRTITPIAQFQIPCLIKNTGNPQAPGTLIGASRDEDELPVKGISNLNNMAMFSV
SGPGMKGMVGMAARVFAAMSRARISVVLITQSSSEYSISFCVPQSDCVRAERAMQEEFYLELKEGLLEPLAVTERLAIIS
VVGDGMRTLRGISAKFFAALARANINIVAIAQGSSERSISVVVNNDDATTGVRVTHQMLFNTDQVIEVFVIGVGGVGGAL
LEQLKRQQSWLKNKHIDLRVCGVANSKALLTNVHGLNLENWQEELAQAKEPFNLGRLIRLVKEYHLLNPVIVDCTSSQAV
ADQYADFLREGFHVVTPNKKANTSSMDYYHQLRYAAEKSRRKFLYDTNVGAGLPVIENLQNLLNAGDELMKFSGILSGSL
SYIFGKLDEGMSFSEATTLAREMGYTEPDPRDDLSGMDVARKLLILARETGRELELADIEIEPVLPAEFNAEGDVAAFMA
NLSQLDDLFAARVAKARDEGKVLRYVGNIDEDGVCRVKIAEVDGNDPLFKVKNGENALAFYSHYYQPLPLVLRGYGAGND
VTAAGVFADLLRTLSWKLGV
>NP_414544.1 homoserine kinase
MVKVYAPASSANMSVGFDVLGAAVTPVDGALLGDVVTVEAAETFSLNNLGRFADKLPSEPRENIVYQCWERFCQELGKQI
PVAMTLEKNMPIGSGLGSSACSVVAALMAMNEHCGKPLNDTRLLALMGELEGRISGSIHYDNVAPCFLGGMQLMIEENDI
ISQQVPGFDEWLWVLAYPGIKVSTAEARAILPAQYRRQDCIAHGRHLAGFIHACYSRQPELAAKLMKDVIAEPYRERLLP
GFRQARQAVAEIGAVASGISGSGPTLFALCDKPETAQRVADWLGKNYLQNQEGFVHICRLDTAGARVLEN
    """
    features = parse_fasta_str(faa_str, " ")
    assert len(features) == 2


def test_parse_fasta_str3():
    faa_str = """
>NP_414543.1 fused aspartate kinase/homoserine dehydrogenase 1
MRVLKFGGTSVANAERFLRVADILESNARQGQVATVLSAPAKITNHLVAMIEKTISGQDALPNISDAERIFAELLTGLAA
    """
    features = parse_fasta_str(faa_str, None)
    assert len(features) == 1
    assert (
        features[0].id
        == "NP_414543.1 fused aspartate kinase/homoserine dehydrogenase 1"
    )
    assert features[0].description is None
    assert len(features[0].seq) == 80


def test_msfeature_add_ontology_term():
    feature = MSFeature("gene1", "MKV")
    feature.add_ontology_term("ONTOLOGY", "value1")
    assert "ONTOLOGY" in feature.ontology_terms
    assert "value1" in feature.ontology_terms["ONTOLOGY"]


def test_msgenome_from_protein_sequences_hash1():
    genome = MSGenome.from_protein_sequences_hash({"gene1": "MKV"})
    assert len(genome.features) == 1
    assert genome.features[0]
    assert genome.features[0].id == "gene1"
    assert genome.features[0].seq == "MKV"


def test_msgenome_from_protein_sequences_hash2():
    genome = MSGenome.from_protein_sequences_hash({"gene1": "MKV", "gene2": "MKVLGD"})
    assert len(genome.features) == 2
